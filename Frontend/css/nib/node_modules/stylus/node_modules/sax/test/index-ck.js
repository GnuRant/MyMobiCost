var globalsBefore=JSON.stringify(Object.keys(global)),util=require("util"),assert=require("assert"),fs=require("fs"),path=require("path"),sax=require("../lib/sax");exports.sax=sax;exports.test=function(t){var n=t.xml,r=sax.parser(t.strict,t.opt),i=t.expect,s=0;sax.EVENTS.forEach(function(e){r["on"+e]=function(t){process.env.DEBUG&&console.error({expect:i[s],actual:[e,t]});if(s>=i.length&&(e==="end"||e==="ready"))return;assert.ok(s<i.length,"expectation #"+s+" "+util.inspect(i[s])+"\n"+"Unexpected event: "+e+" "+(t?util.inspect(t):""));var n=t instanceof Error?"\n"+t.message:util.inspect(t);assert.equal(e,i[s][0],"expectation #"+s+"\n"+"Didn't get expected event\n"+"expect: "+i[s][0]+" "+util.inspect(i[s][1])+"\n"+"actual: "+e+" "+n+"\n");e==="error"?assert.equal(t.message,i[s][1]):assert.deepEqual(t,i[s][1],"expectation #"+s+"\n"+"Didn't get expected argument\n"+"expect: "+i[s][0]+" "+util.inspect(i[s][1])+"\n"+"actual: "+e+" "+n+"\n");s++;e==="error"&&r.resume()}});n&&r.write(n).close();return r};if(module===require.main){var running=!0,failures=0;function fail(e,t){util.error("Failed: "+e);util.error(t.stack||t.message);failures++}fs.readdir(__dirname,function(e,t){t=t.filter(function(e){return/\.js$/.exec(e)&&e!=="index.js"});var n=t.length,r=0;console.log("0.."+n);t.forEach(function(e){try{require(path.resolve(__dirname,e));var t=JSON.stringify(Object.keys(global));if(t!==globalsBefore){var n=new Error("new globals introduced\nexpected: "+globalsBefore+"\n"+"actual:   "+t);globalsBefore=t;throw n}console.log("ok "+ ++r+" - "+e)}catch(n){console.log("not ok "+ ++r+" - "+e);fail(e,n)}});return failures?console.error(failures+" failure"+(failures>1?"s":"")):console.log("#all pass")})};